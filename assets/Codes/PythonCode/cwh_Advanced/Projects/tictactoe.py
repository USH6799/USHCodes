# Python Program of tic tac toe Game

import random


# Array for the Board
board = ["1","2","3","4","5","6","7","8","9"]
choices = ["1","2","3","4","5","6","7","8","9"]

# the below is the sample board which is generated by printboard function
# 1|2|3   @board[0] -> '1'  @board[1] -> '2'  @board[2] -> '3'  
# -+-+-     
# 4|5|6   @board[3] -> '4'  @board[4] -> '5'  @board[5] -> '6'
# -+-+-
# 7|8|9   @board[6] -> '7'  @board[7] -> '8'  @board[8] -> '9'

# function to print the board on screen
def printboard(board):
    print(board[0],"|",board[1],"|",board[2])
    print("-","+","-","+","-")
    print(board[3],"|",board[4],"|",board[5])
    print("-","+","-","+","-")
    print(board[6],"|",board[7],"|",board[8])

# function to check if the place on the board is already placed or another player has already taken this is for checking in turn of X
def checkX(board,turn1):
    if(board[turn1-1] == "X" or board[turn1-1] == "O"):
        return False
    else:
        return True
    
# function to check if the place on the board is already placed or another player has already taken this is for checking in turn of O
def checkO(board,turn2):
    if(board[turn2-1] == "X" or board[turn2-1] == "O"):
        return False
    else:
        return True
    
# function to check who is the winner 
def checkresult(board): 
    if(board[0]+board[1]+board[2] == "XXX"):
        return "X"
    elif(board[3]+board[4]+board[5] == "XXX"):
        return "X"
    elif(board[6]+board[7]+board[8] == "XXX"):
        return "X"
    elif(board[0]+board[3]+board[6] == "XXX"):
        return "X"
    elif(board[1]+board[4]+board[7] == "XXX"):
        return "X"
    elif(board[2]+board[5]+board[8] == "XXX"):
        return "X"
    elif(board[0]+board[4]+board[8] == "XXX"):
        return "X"
    elif(board[2]+board[4]+board[6] == "XXX"):
        return "X"
    elif(board[0]+board[1]+board[2] == "OOO"):
        return "O"
    elif(board[3]+board[4]+board[5] == "OOO"):
        return "O"
    elif(board[6]+board[7]+board[8] == "OOO"):
        return "O"
    elif(board[0]+board[3]+board[6] == "OOO"):
        return "O"
    elif(board[1]+board[4]+board[7] == "OOO"):
        return "O"
    elif(board[2]+board[5]+board[8] == "OOO"):
        return "O"
    elif(board[0]+board[4]+board[8] == "OOO"):
        return "O"
    elif(board[2]+board[4]+board[6] == "OOO"):
        return "O"


def turn_gen(choices):
    pick = random.choice(choices)
    print("Computer Placed O on",pick)
    pick =int(pick)
    return pick

# print() -> This empty print Statements Are used To add Spaces,Ignore them

print("Welcome To Tic Tac Toe Game.")
print()
while(True):
    print("You Want to Play it With Computer Or player.")
    print()
    print("1 for Player\n\n2for computer")
    print()
    choice = input("I Want To play With: ")

    try:
        choice = int(choice)
    except:
        print("Wrong Input")
        continue
    if(choice == 1):
        # input statement to egt the name of 1st player 
        player1 = input("The Name Of 1st PLayer is: ")

        print()

        # input statement to egt the name of 2nd player 
        player2 = input("The Name Of 2nd Player is: ")

        print()
        print("Hy ",player1," and ",player2)
        print()

        # Calling printboard functin to print the board
        printboard(board)

        print("Rules: ")
        print("# This Is the Board | Enter the Number visible on    the    board  to place your Turn")
        print("# 1st player -> X")
        print("# 2nd player -> O")
        print()

        # a = false -> temporary variable to run the loop
        a = False

        # outer and main loop [loop 1]
        while(True):

            # checking if any player won the match,so that new game     with    new board will be started
            if(a == True):
                board = ["1","2","3","4","5","6","7","8","9"]     

            # loop for turns of 1st player or wrong turns of    player     [loop 1.1]  
            while(True):

                # printboard -> printing board
                printboard(board)

                print("The Turn Of ",player1," !")
                print()

                # taking input from the user or turn between 1 to 9
                turn1 = input("I want To place X on [1-9] : ")
                print()

                # try and except to Check if user enter another     Data    type like String
                try:

                    # trying to convert turn1{str} -> to -> turn1   {int}
                    turn1 = int(turn1)

                    # checking if the Number is in range of 1-9 or  not

                    # if -> not in range
                    if(turn1 < 1 or turn1 > 9):
                        print("YOu exceeds Limit")
                        print()
                        continue

                    # else -> in range
                    else:
                        pass

                # except will run if converting str to int ,failed
                except:
                    print("Wrong Input")
                    print()

                    # continue -> to restart the loop from loop of  X    [loop 1.1]
                    continue

                # check -> variable to contain boolean statements
                # checkX -> to check if the place on which the  player   make turn is already reserved by 'X' or 'O'
                # checkX -> returns True if the place is not reserved
                # checkX -> returns False if the place is reserved
                check = checkX(board,turn1)

                # if -> runs if the place is not reserved
                if(check == True):

                    # places 'X' on the board at index[turn1-1]
                    # if you don't know about the index please  refer    line no.6 to 11
                    board[turn1-1] = "X"

                # else -> runs if the place is already reserved
                else:

                    print("Place already Reserved,Try other")
                    print()

                    # continue -> restarts the loop of X[loop 1.1]
                    continue

                # result -> variable to store the result
                # checkresult -> Matches All Cases if the X or O wins
                # checkresult -> returns "X" if X won the match 
                # checkresult -> returns "O" if O won the match 
                result = checkresult(board)

                # if -> runs when result = "X"
                if(result == "X"):

                    #makes a = true | So,in next game the board     get     reset 
                    a = True

                    # printboard -> Prints The board
                    printboard(board)

                    print()
                    print(player1," [X] Won the Match")
                    print()

                    #Break -> Used To Exit The Loop of X [loop 1.1]
                    break 

                # else -> runs when result is not equal to "X"
                else:

                    print()

                    # Break -> Used To Exit The Loop of X [loop 1.1]
                    break

            # loop for turns of 2nd player or wrong turns of    player     [loop 1.2] 
            while(True):

                # checks if X already won or not
                # if -> X already Won
                if(a == True):

                    # exits the loop of O[loop 1.2]
                    break

                # else -> no one won
                else:

                    # prints the board
                    printboard(board)

                    print("The Turn Of ",player2," !")
                    print()

                    #taking input form 2nd player ot turn
                    turn2 = input("I want To place O on [1-9] : ")

                    print()

                    # try and except to Check if user enter another     Data    type like String
                    try:

                        # trying to convert turn2{str} -> to ->     turn2   {int}
                        turn2 = int(turn2)

                        # checking if the Number is in range of 1-9     or  not

                        # if -> not in range
                        if(turn2 < 1 or turn2 > 9):
                            print("You exceeds Limit")
                            print()
                            continue

                        # else -> in range
                        else:
                            pass

                    # except will run if converting str to int ,    failed
                    except:

                        print("Wrong Input")

                        # continue -> to restart the loop of O [loop    1.2]
                        continue

                    # check -> variable to contain boolean statements
                    # check0 -> to check if the place on which the      player make turn is already reserved by 'X' or  'O'
                    # check0 -> returns True if the place is not    reserved
                    # check0 -> returns False if the place is   reserved
                    check = checkO(board,turn2)

                    # if -> runs if the place is not reserved
                    if(check == True):

                        # places '0' on the board at index[turn2-1]
                        # if you don't know about the index please  refer    line no.6 to 11
                        board[turn2-1] = "O"

                    # else -> runs if the place is already reserved
                    else:

                        print("Place already Reserved,Try other")
                        print()

                        # continue -> restarts the loop of O[loop 1.    2]
                        continue

                    # result -> variable to store the result
                    # checkresult -> Matches All Cases if the X or O    wins
                    # checkresult -> returns "X" if X won the match 
                    # checkresult -> returns "O" if O won the match
                    result = checkresult(board)

                    # if -> runs when result = "O"
                    if(result == "O"):

                        #makes a = true | So,in next game the board     get     reset 
                        a = True

                        # printboard -> Prints The board
                        printboard(board)

                        print()
                        print(player2," [O] Won the Match")
                        print()

                        #Break -> Used To Exit The Loop of O [loop 1.   2]
                        break

                    # else -> runs when result is not equal to "O"
                    else:

                        #Break -> Used To Exit The Loop of O [loop 1.   2]
                        break
    elif(choice == 2):
        print()
        print("What Is your Name: ")
        name = input("my name is : ")
        print()
        flag = False
        while(True):
            if(flag == True):
                board = [1,2,3,4,5,6,7,8,9]
                choices = [1,2,3,4,5,6,7,8,9]
            flag = False
            while(True):
                print("Turn of ",name)
                print()
                printboard(board)
                print()
                player_turn = input("I want to Place X on [1-9] : ")
                try:
                    player_turn = int(player_turn)
                    if(0<player_turn<10):
                        pass
                    else:
                        print("You Exceeds Limit")
                        continue
                except:
                    print("Wrong Input")
                    continue
                pos = checkX(board,player_turn)
                if(pos == True):
                    board[player_turn - 1] = "X"
                    choices.pop(player_turn - 1)
                    if(checkresult(board) == "X"):
                        flag = True
                        print("Player ",name,"Won the Match")
                        break
                    else:
                        flag = False
                        break
                else:
                    print("Wrong Input | Place Already Reserved")
                    continue
            while(True):
                print("Turn of Computer")
                print()
                printboard(board)
                placeturn = turn_gen(choices)
                board[placeturn-1] = "O"
                choices.pop(placeturn-1)
                print()
                if(checkresult(board) == "O"):
                    flag = True
                    print("Computer Won the Match")
                    print()
                    break
                else:
                    flag = False
                    break
    else:
        print()
        print("Wrong Choice")
        print()
        continue
    